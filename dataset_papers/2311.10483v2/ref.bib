@inproceedings{DBLP:conf/pldi/LeZN19,
  author       = {Ton Chanh Le and
                  Guolong Zheng and
                  ThanhVu Nguyen},
  editor       = {Kathryn S. McKinley and
                  Kathleen Fisher},
  title        = {{SLING:} using dynamic analysis to infer program invariants in separation
                  logic},
  booktitle    = {Proceedings of the 40th {ACM} {SIGPLAN} Conference on Programming
                  Language Design and Implementation, {PLDI} 2019, Phoenix, AZ, USA,
                  June 22-26, 2019},
  pages        = {788--801},
  publisher    = {{ACM}},
  year         = {2019},
  url          = {https://doi.org/10.1145/3314221.3314634},
  doi          = {10.1145/3314221.3314634},
  timestamp    = {Sun, 09 Jun 2019 19:00:05 +0200},
  biburl       = {https://dblp.org/rec/conf/pldi/LeZN19.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/frocos/EchenimPS19,
  author       = {Mnacho Echenim and
                  Nicolas Peltier and
                  Yanis Sellami},
  editor       = {Andreas Herzig and
                  Andrei Popescu},
  title        = {Ilinva: Using Abduction to Generate Loop Invariants},
  booktitle    = {Frontiers of Combining Systems - 12th International Symposium, FroCoS
                  2019, London, UK, September 4-6, 2019, Proceedings},
  series       = {Lecture Notes in Computer Science},
  volume       = {11715},
  pages        = {77--93},
  publisher    = {Springer},
  year         = {2019},
  url          = {https://doi.org/10.1007/978-3-030-29007-8\_5},
  doi          = {10.1007/978-3-030-29007-8\_5},
  timestamp    = {Thu, 22 Aug 2019 12:46:56 +0200},
  biburl       = {https://dblp.org/rec/conf/frocos/EchenimPS19.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/corr/PadhiM17,
  author       = {Saswat Padhi and
                  Todd D. Millstein},
  title        = {Data-Driven Loop Invariant Inference with Automatic Feature Synthesis},
  journal      = {CoRR},
  volume       = {abs/1707.02029},
  year         = {2017},
  url          = {http://arxiv.org/abs/1707.02029},
  eprinttype    = {arXiv},
  eprint       = {1707.02029},
  timestamp    = {Mon, 13 Aug 2018 16:48:30 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/PadhiM17.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/popl/0001NMR16,
  author       = {Pranav Garg and
                  Daniel Neider and
                  P. Madhusudan and
                  Dan Roth},
  editor       = {Rastislav Bod{\'{\i}}k and
                  Rupak Majumdar},
  title        = {Learning invariants using decision trees and implication counterexamples},
  booktitle    = {Proceedings of the 43rd Annual {ACM} {SIGPLAN-SIGACT} Symposium on
                  Principles of Programming Languages, {POPL} 2016, St. Petersburg,
                  FL, USA, January 20 - 22, 2016},
  pages        = {499--512},
  publisher    = {{ACM}},
  year         = {2016},
  url          = {https://doi.org/10.1145/2837614.2837664},
  doi          = {10.1145/2837614.2837664},
  timestamp    = {Mon, 26 Jun 2023 20:40:54 +0200},
  biburl       = {https://dblp.org/rec/conf/popl/0001NMR16.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{10.5555/3327757.3327873,
author = {Si, Xujie and Dai, Hanjun and Raghothaman, Mukund and Naik, Mayur and Song, Le},
title = {Learning Loop Invariants for Program Verification},
year = {2018},
publisher = {Curran Associates Inc.},
address = {Red Hook, NY, USA},
abstract = {A fundamental problem in program verification concerns inferring loop invariants. The problem is undecidable and even practical instances are challenging. Inspired by how human experts construct loop invariants, we propose a reasoning framework CODE2INV that constructs the solution by multi-step decision making and querying an external program graph memory block. By training with reinforcement learning, CODE2INV captures rich program features and avoids the need for ground truth solutions as supervision. Compared to previous learning tasks in domains with graph-structured data, it addresses unique challenges, such as a binary objective function and an extremely sparse reward that is given by an automated theorem prover only after the complete loop invariant is proposed. We evaluate CODE2INV on a suite of 133 benchmark problems and compare it to three state-of-the-art systems. It solves 106 problems compared to 73 by a stochastic search-based system, 77 by a heuristic search-based system, and 100 by a decision tree learning-based system. Moreover, the strategy learned can be generalized to new programs: compared to solving new instances from scratch, the pre-trained agent is more sample efficient in finding solutions.},
booktitle = {Proceedings of the 32nd International Conference on Neural Information Processing Systems},
pages = {7762–7773},
numpages = {12},
location = {Montr\'{e}al, Canada},
series = {NIPS'18}
}

@article{DBLP:journals/corr/abs-2205-14229,
  author       = {Jonathan Laurent and
                  Andr{\'{e}} Platzer},
  title        = {Learning to Find Proofs and Theorems by Learning to Refine Search
                  Strategies},
  journal      = {CoRR},
  volume       = {abs/2205.14229},
  year         = {2022},
  url          = {https://doi.org/10.48550/arXiv.2205.14229},
  doi          = {10.48550/arXiv.2205.14229},
  eprinttype    = {arXiv},
  eprint       = {2205.14229},
  timestamp    = {Wed, 01 Jun 2022 13:56:25 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-2205-14229.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{10.1145/3385412.3385986,
author = {Yao, Jianan and Ryan, Gabriel and Wong, Justin and Jana, Suman and Gu, Ronghui},
title = {Learning Nonlinear Loop Invariants with Gated Continuous Logic Networks},
year = {2020},
isbn = {9781450376136},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3385412.3385986},
doi = {10.1145/3385412.3385986},
abstract = {Verifying real-world programs often requires inferring loop invariants with nonlinear constraints. This is especially true in programs that perform many numerical operations, such as control systems for avionics or industrial plants. Recently, data-driven methods for loop invariant inference have shown promise, especially on linear loop invariants. However, applying data-driven inference to nonlinear loop invariants is challenging due to the large numbers of and large magnitudes of high-order terms, the potential for overfitting on a small number of samples, and the large space of possible nonlinear inequality bounds. In this paper, we introduce a new neural architecture for general SMT learning, the Gated Continuous Logic Network (G-CLN), and apply it to nonlinear loop invariant learning. G-CLNs extend the Continuous Logic Network (CLN) architecture with gating units and dropout, which allow the model to robustly learn general invariants over large numbers of terms. To address overfitting that arises from finite program sampling, we introduce fractional sampling—a sound relaxation of loop semantics to continuous functions that facilitates unbounded sampling on the real domain. We additionally design a new CLN activation function, the Piecewise Biased Quadratic Unit (PBQU), for naturally learning tight inequality bounds. We incorporate these methods into a nonlinear loop invariant inference system that can learn general nonlinear loop invariants. We evaluate our system on a benchmark of nonlinear loop invariants and show it solves 26 out of 27 problems, 3 more than prior work, with an average runtime of 53.3 seconds. We further demonstrate the generic learning ability of G-CLNs by solving all 124 problems in the linear Code2Inv benchmark. We also perform a quantitative stability evaluation and show G-CLNs have a convergence rate of 97.5\% on quadratic problems, a 39.2\% improvement over CLN models.},
booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {106–120},
numpages = {15},
keywords = {Program Verification, Loop Invariant Inference, Continuous Logic Networks},
location = {London, UK},
series = {PLDI 2020}
}

@article{DBLP:journals/corr/abs-1905-07457,
  author       = {Saswat Padhi and
                  Todd D. Millstein and
                  Aditya V. Nori and
                  Rahul Sharma},
  title        = {Overfitting in Synthesis: Theory and Practice (Extended Version)},
  journal      = {CoRR},
  volume       = {abs/1905.07457},
  year         = {2019},
  url          = {http://arxiv.org/abs/1905.07457},
  eprinttype    = {arXiv},
  eprint       = {1905.07457},
  timestamp    = {Thu, 08 Aug 2019 07:19:03 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1905-07457.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{pldi/2016/PadhiSM,
  author    = {Saswat Padhi and Rahul Sharma and Todd D. Millstein},
  title     = {Data-Driven Precondition Inference with Learned Features},
  booktitle = {Proceedings of the 37th {ACM} {SIGPLAN} Conference on Programming
               Language Design and Implementation, {PLDI} 2016, Santa Barbara, CA,
               USA, June 13-17, 2016},
  pages     = {42--56},
  year      = {2016},
  url       = {http://doi.acm.org/10.1145/2908080.2908099},
  doi       = {10.1145/2908080.2908099}
}

@article{pei2023can,
  title={Can Large Language Models Reason about Program Invariants?},
  author={Pei, Kexin and Bieber, David and Shi, Kensen and Sutton, Charles and Yin, Pengcheng},
  year={2023}
}

@article{kenison2023polynomial,
  title={From Polynomial Invariants to Linear Loops},
  author={Kenison, George and Kov{\'a}cs, Laura and Varonka, Anton},
  journal={arXiv preprint arXiv:2302.06323},
  year={2023}
}

@inproceedings{de2008z3,
  title={Z3: An efficient SMT solver},
  author={De Moura, Leonardo and Bj{\o}rner, Nikolaj},
  booktitle={International conference on Tools and Algorithms for the Construction and Analysis of Systems},
  pages={337--340},
  year={2008},
  organization={Springer}
}

@inproceedings{filliatre2013why3,
  title={Why3—where programs meet provers},
  author={Filli{\^a}tre, Jean-Christophe and Paskevich, Andrei},
  booktitle={Programming Languages and Systems: 22nd European Symposium on Programming, ESOP 2013, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2013, Rome, Italy, March 16-24, 2013. Proceedings 22},
  pages={125--128},
  year={2013},
  organization={Springer}
}

@inproceedings{echenim2018generic,
  title={A generic framework for implicate generation modulo theories},
  author={Echenim, Mnacho and Peltier, Nicolas and Sellami, Yanis},
  booktitle={Automated Reasoning: 9th International Joint Conference, IJCAR 2018, Held as Part of the Federated Logic Conference, FloC 2018, Oxford, UK, July 14-17, 2018, Proceedings 9},
  pages={279--294},
  year={2018},
  organization={Springer}
}

@article{padhi2016data,
  title={Data-driven precondition inference with learned features},
  author={Padhi, Saswat and Sharma, Rahul and Millstein, Todd},
  journal={ACM SIGPLAN Notices},
  volume={51},
  number={6},
  pages={42--56},
  year={2016},
  publisher={ACM New York, NY, USA}
}


@article{laurent2022learning,
  title={Learning to Find Proofs and Theorems by Learning to Refine Search Strategies: The Case of Loop Invariant Synthesis},
  author={Laurent, Jonathan and Platzer, Andr{\'e}},
  journal={Advances in Neural Information Processing Systems},
  volume={35},
  pages={4843--4856},
  year={2022}
}

@inproceedings{yao2020learning,
  title={Learning nonlinear loop invariants with gated continuous logic networks},
  author={Yao, Jianan and Ryan, Gabriel and Wong, Justin and Jana, Suman and Gu, Ronghui},
  booktitle={Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={106--120},
  year={2020}
}

@article{ryan2019cln2inv,
  title={CLN2INV: learning loop invariants with continuous logic networks},
  author={Ryan, Gabriel and Wong, Justin and Yao, Jianan and Gu, Ronghui and Jana, Suman},
  journal={arXiv preprint arXiv:1909.11542},
  year={2019}
}

@inproceedings{lin2017fib,
  title={FiB: Squeezing loop invariants by interpolation between forward/backward predicate transformers},
  author={Lin, Shang-Wei and Sun, Jun and Xiao, Hao and Liu, Yang and San{\'a}n, David and Hansen, Henri},
  booktitle={2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  pages={793--803},
  year={2017},
  organization={IEEE}
}

@inproceedings{miltner2020data,
  title={Data-driven inference of representation invariants},
  author={Miltner, Anders and Padhi, Saswat and Millstein, Todd and Walker, David},
  booktitle={Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={1--15},
  year={2020}
}

@article{ernst2007daikon,
  title={The Daikon system for dynamic detection of likely invariants},
  author={Ernst, Michael D and Perkins, Jeff H and Guo, Philip J and McCamant, Stephen and Pacheco, Carlos and Tschantz, Matthew S and Xiao, Chen},
  journal={Science of computer programming},
  volume={69},
  number={1-3},
  pages={35--45},
  year={2007},
  publisher={Elsevier}
}

@article{nijkamp2022codegen,
  title={Codegen: An open large language model for code with multi-turn program synthesis},
  author={Nijkamp, Erik and Pang, Bo and Hayashi, Hiroaki and Tu, Lifu and Wang, Huan and Zhou, Yingbo and Savarese, Silvio and Xiong, Caiming},
  journal={arXiv preprint arXiv:2203.13474},
  year={2022}
}

@article{nijkamp2023codegen2,
  title={Codegen2: Lessons for training llms on programming and natural languages},
  author={Nijkamp, Erik and Hayashi, Hiroaki and Xiong, Caiming and Savarese, Silvio and Zhou, Yingbo},
  journal={arXiv preprint arXiv:2305.02309},
  year={2023}
}

@article{wang2021codet5,
  title={Codet5: Identifier-aware unified pre-trained encoder-decoder models for code understanding and generation},
  author={Wang, Yue and Wang, Weishi and Joty, Shafiq and Hoi, Steven CH},
  journal={arXiv:2109.00859},
  year={2021}
}

@ARTICLE{9186032,
  author={He, Fei and Yu, Qianshan and Cai, Liming},
  journal={IEEE Transactions on Software Engineering}, 
  title={Efficient Summary Reuse for Software Regression Verification}, 
  year={2022},
  volume={48},
  number={4},
  pages={1417-1431},
  doi={10.1109/TSE.2020.3021477}
 }
 
 @article{lecun1998gradient,
  title={Gradient-based learning applied to document recognition},
  author={LeCun, Yann and Bottou, L{\'e}on and Bengio, Yoshua and Haffner, Patrick},
  journal={Proceedings of the IEEE},
  volume={86},
  number={11},
  pages={2278--2324},
  year={1998},
  publisher={Ieee}
}

 @article{lecun2015deep,
  title={Deep learning},
  author={LeCun, Yann and Bengio, Yoshua and Hinton, Geoffrey},
  journal={nature},
  volume={521},
  number={7553},
  pages={436--444},
  year={2015},
  publisher={Nature Publishing Group UK London}
}

@article{mnih2013playing,
  title={Playing atari with deep reinforcement learning},
  author={Mnih, Volodymyr and Kavukcuoglu, Koray and Silver, David and Graves, Alex and Antonoglou, Ioannis and Wierstra, Daan and Riedmiller, Martin},
  journal={arXiv preprint arXiv:1312.5602},
  year={2013}
}

@inproceedings{chen2020simple,
  title={A simple framework for contrastive learning of visual representations},
  author={Chen, Ting and Kornblith, Simon and Norouzi, Mohammad and Hinton, Geoffrey},
  booktitle={International conference on machine learning},
  pages={1597--1607},
  year={2020},
  organization={PMLR}
}


@article{radford2019language,
  title={Language models are unsupervised multitask learners},
  author={Radford, Alec and Wu, Jeffrey and Child, Rewon and Luan, David and Amodei, Dario and Sutskever, Ilya and others},
  journal={OpenAI blog},
  volume={1},
  number={8},
  pages={9},
  year={2019}
}

@article{vaswani2017attention,
  title={Attention is all you need},
  author={Vaswani, Ashish and Shazeer, Noam and Parmar, Niki and Uszkoreit, Jakob and Jones, Llion and Gomez, Aidan N and Kaiser, {\L}ukasz and Polosukhin, Illia},
  journal={Advances in neural information processing systems},
  volume={30},
  year={2017}
}


@misc{openai2023gpt4,
      title={GPT-4 Technical Report}, 
      author={OpenAI},
      year={2023},
      eprint={2303.08774},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}

@article{touvron2023llama,
  title={Llama: Open and efficient foundation language models},
  author={Touvron, Hugo and Lavril, Thibaut and Izacard, Gautier and Martinet, Xavier and Lachaux, Marie-Anne and Lacroix, Timoth{\'e}e and Rozi{\`e}re, Baptiste and Goyal, Naman and Hambro, Eric and Azhar, Faisal and others},
  journal={arXiv preprint arXiv:2302.13971},
  year={2023}
}

@article{devlin2018bert,
  title={Bert: Pre-training of deep bidirectional transformers for language understanding},
  author={Devlin, Jacob and Chang, Ming-Wei and Lee, Kenton and Toutanova, Kristina},
  journal={arXiv preprint arXiv:1810.04805},
  year={2018}
}

@misc{mlm,
  author = {HuggingFace},
  year = {2023},
  url = {https://huggingface.co/docs/transformers/tasks/masked_language_modeling},
  title = {Masked language modeling}
}

@misc{SVCOMP,
    URL= { https://gitlab.com/sosy-lab/benchmarking/sv-benchmarks/-/tree/main/c},
    title = {SV-COMP benchmark}
}

@misc{SLING,
  URL = { https://github.com/guolong-zheng/sling},  
  title = {SLING benchmark}
}

@misc{liteos,
  URL = { https://gitee.com/openharmony/kernel_liteos_m},  
  title = {Source code of liteos}
}

@misc{Linux,
  URL = { https://github.com/torvalds/linux/},  
  title = {Source code of Linux Kernel}
}

@misc{GlibC,
  URL = { https://github.com/kraj/glibc/blob/master/},  
  title = {Source code of GlibC}
}

@misc{Zephyr,
  URL = { https://github.com/zephyrproject-rtos/zephyr},  
  title = {Source code of Zephyr}
}

@article{cubuk1805autoaugment,
  title={Autoaugment: Learning augmentation policies from data. arXiv 2018},
  author={Cubuk, Ekin D and Zoph, Barret and Mane, Dandelion and Vasudevan, Vijay and Le, Quoc V},
  journal={arXiv preprint arXiv:1805.09501},
  year={1805}
}

@article{bayer2022survey,
  title={A survey on data augmentation for text classification},
  author={Bayer, Markus and Kaufhold, Marc-Andr{\'e} and Reuter, Christian},
  journal={ACM Computing Surveys},
  volume={55},
  number={7},
  pages={1--39},
  year={2022},
  publisher={ACM New York, NY}
}

@inproceedings{yun2019cutmix,
  title={Cutmix: Regularization strategy to train strong classifiers with localizable features},
  author={Yun, Sangdoo and Han, Dongyoon and Oh, Seong Joon and Chun, Sanghyuk and Choe, Junsuk and Yoo, Youngjoon},
  booktitle={Proceedings of the IEEE/CVF international conference on computer vision},
  pages={6023--6032},
  year={2019}
}

@article{zhang2017mixup,
  title={mixup: Beyond empirical risk minimization},
  author={Zhang, Hongyi and Cisse, Moustapha and Dauphin, Yann N and Lopez-Paz, David},
  journal={arXiv preprint arXiv:1710.09412},
  year={2017}
}

@article{cao2023comprehensive,
  title={A comprehensive survey of ai-generated content (aigc): A history of generative ai from gan to chatgpt},
  author={Cao, Yihan and Li, Siyu and Liu, Yixin and Yan, Zhiling and Dai, Yutong and Yu, Philip S and Sun, Lichao},
  journal={arXiv preprint arXiv:2303.04226},
  year={2023}
}

@article{chen2023teaching,
  title={Teaching large language models to self-debug},
  author={Chen, Xinyun and Lin, Maxwell and Sch{\"a}rli, Nathanael and Zhou, Denny},
  journal={arXiv preprint arXiv:2304.05128},
  year={2023}
}

@article{li2023starcoder,
  title={StarCoder: may the source be with you!},
  author={Li, Raymond and Allal, Loubna Ben and Zi, Yangtian and Muennighoff, Niklas and Kocetkov, Denis and Mou, Chenghao and Marone, Marc and Akiki, Christopher and Li, Jia and others},
  journal={arXiv preprint arXiv:2305.06161},
  year={2023}
}

@misc{chakraborty2023ranking,
      title={Ranking LLM-Generated Loop Invariants for Program Verification}, 
      author={Saikat Chakraborty and others},
      year={2023},
      eprint={2310.09342},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}

@article{wen2024enchanting,
  title={Enchanting program specification synthesis by large language models using static analysis and program verification},
  author={Wen, Cheng and Cao, Jialun and Su, Jie and Xu, Zhiwu and Qin, Shengchao and He, Mengda and Li, Haokun and Cheung, Shing-Chi and Tian, Cong},
  journal={arXiv preprint arXiv:2404.00762},
  year={2024}
}

@article{openai2023gpt,
  title={Gpt-4 technical report. arxiv 2303.08774},
  author={OpenAI, R},
  journal={View in Article},
  volume={2},
  number={5},
  year={2023}
}

@article{10.1145/3211968,
author = {O'Hearn, Peter},
title = {Separation Logic},
year = {2019},
issue_date = {February 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {62},
number = {2},
issn = {0001-0782},
url = {https://doi.org/10.1145/3211968},
doi = {10.1145/3211968},
abstract = {Separation logic is a key development in formal reasoning about programs, opening up new lines of attack on longstanding problems.},
journal = {Commun. ACM},
month = {jan},
pages = {86–95},
numpages = {10}
}

@article{SurveySymExec-CSUR18,
  author    = {Baldoni, Roberto and Coppa, Emilio and D'Elia, Daniele Cono and Demetrescu, Camil and Finocchi, Irene},
  title     = {A Survey of Symbolic Execution Techniques},
  journal   = {ACM Comput. Surv.},
  volume    = {51},
  number = {3},
  articleno = {50},
  publisher = {ACM},
  address = {New York, NY, USA},
  year = {2018}
}

@inproceedings{10.1007/978-3-030-99527-0_20,
author = {Beyer, Dirk},
title = {Progress on Software Verification: SV-COMP 2022},
year = {2022},
isbn = {978-3-030-99526-3},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/978-3-030-99527-0_20},
doi = {10.1007/978-3-030-99527-0_20},
abstract = {The 11th edition of the Competition on Software Verification (SV-COMP 2022) provides the largest ever overview of tools for software verification. The competition is an annual comparative evaluation of fully automatic software verifiers for C and Java programs. The objective is to provide an overview of the state of the art in terms of effectiveness and efficiency of software verification, establish standards, provide a platform for exchange to developers of such tools, educate PhD students on reproducibility approaches and benchmarking, and provide computing resources to developers that do not have access to compute clusters. The competition consisted of 15 648 verification tasks for C programs and 586 verification tasks for Java programs. Each verification task consisted of a program and a property (reachability, memory safety, overflows, termination). The new category on data-race detection was introduced as demonstration category. SV-COMP 2022 had 47 participating verification systems from 33 teams from 11 countries.},
booktitle = {Tools and Algorithms for the Construction and Analysis of Systems: 28th International Conference, TACAS 2022, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2022, Munich, Germany, April 2–7, 2022, Proceedings, Part II},
pages = {375–402},
numpages = {28},
keywords = {Formal verification, Program analysis, Competition, Software verification, Verification tasks, Benchmark, C language, Java language, SV-Benchmarks, BenchExec, CoVeriTeam},
location = {Munich, Germany}
}

@book{sieber2013foundations,
  title={The foundations of program verification},
  author={Sieber, Kurt},
  year={2013},
  publisher={Springer-Verlag}
}

@article{fetzer1988program,
  title={Program verification: The very idea},
  author={Fetzer, James H},
  journal={Communications of the ACM},
  volume={31},
  number={9},
  pages={1048--1063},
  year={1988},
  publisher={ACM New York, NY, USA}
}

@book{nelson1980techniques,
  title={Techniques for program verification},
  author={Nelson, Charles Gregory},
  year={1980},
  publisher={Stanford University}
}

@inproceedings{srivastava2010program,
  title={From program verification to program synthesis},
  author={Srivastava, Saurabh and Gulwani, Sumit and Foster, Jeffrey S},
  booktitle={Proceedings of the 37th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages={313--326},
  year={2010}
}

@book{almeida2011rigorous,
  title={Rigorous software development: an introduction to program verification},
  author={Almeida, Jos{\'e} Bacelar and Frade, Maria Jo{\~a}o and Pinto, Jorge Sousa and De Sousa, Simao Melo},
  volume={1},
  year={2011},
  publisher={Springer}
}

@article{koopman2016challenges,
  title={Challenges in autonomous vehicle testing and validation},
  author={Koopman, Philip and Wagner, Michael},
  journal={SAE International Journal of Transportation Safety},
  volume={4},
  number={1},
  pages={15--24},
  year={2016},
  publisher={JSTOR}
}

@article{daw2014formal,
  title={Formal verification of software-based medical devices considering medical guidelines},
  author={Daw, Zamira and Cleaveland, Rance and Vetter, Marcus},
  journal={International journal of computer assisted radiology and surgery},
  volume={9},
  pages={145--153},
  year={2014},
  publisher={Springer}
}

@incollection{colombo2018industrial,
  title={Industrial experiences with runtime verification of financial transaction systems: lessons learnt and standing challenges},
  author={Colombo, Christian and Pace, Gordon J},
  booktitle={Lectures on Runtime Verification: Introductory and Advanced Topics},
  pages={211--232},
  year={2018},
  publisher={Springer}
}

@inproceedings{dreossi2019verifai,
  title={Verifai: A toolkit for the formal design and analysis of artificial intelligence-based systems},
  author={Dreossi, Tommaso and Fremont, Daniel J and Ghosh, Shromona and Kim, Edward and Ravanbakhsh, Hadi and Vazquez-Chanlatte, Marcell and Seshia, Sanjit A},
  booktitle={International Conference on Computer Aided Verification},
  pages={432--442},
  year={2019},
  organization={Springer}
}

@inproceedings{rajaona2023program,
  title={Program Semantics and Verification Technique for AI-centred Programs},
  author={Rajaona, Fortunat and Boureanu, Ioana and Malvone, Vadim and Belardinelli, Francesco},
  booktitle={International Symposium on Formal Methods},
  pages={473--491},
  year={2023},
  organization={Springer}
}

@article{hoare1969axiomatic,
  title={An axiomatic basis for computer programming},
  author={Hoare, Charles Antony Richard},
  journal={Communications of the ACM},
  volume={12},
  number={10},
  pages={576--580},
  year={1969},
  publisher={ACM New York, NY, USA}
}

@article{furia2014loop,
  title={Loop invariants: Analysis, classification, and examples},
  author={Furia, Carlo A and Meyer, Bertrand and Velder, Sergey},
  journal={ACM Computing Surveys (CSUR)},
  volume={46},
  number={3},
  pages={1--51},
  year={2014},
  publisher={ACM New York, NY, USA}
}
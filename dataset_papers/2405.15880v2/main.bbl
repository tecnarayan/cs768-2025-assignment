\begin{thebibliography}{46}
\expandafter\ifx\csname natexlab\endcsname\relax\def\natexlab#1{#1}\fi

\bibitem[{arc(2020)}]{arc_kaggle}
 2020.
\newblock \href {https://www.kaggle.com/competitions/abstraction-and-reasoning-challenge/leaderboard} {Arc kaggle competition leaderboard}.
\newblock Accessed: 2024-05-19.

\bibitem[{Albarghouthi et~al.(2013)Albarghouthi, Gulwani, and Kincaid}]{albarghouthi2013recursive}
Aws Albarghouthi, Sumit Gulwani, and Zachary Kincaid. 2013.
\newblock Recursive program synthesis.
\newblock In \emph{International Conference on Computer Aided Verification}, pages 934--950. Springer.

\bibitem[{Alford et~al.(2022)Alford, Gandhi, Rangamani, Banburski, Wang, Dandekar, Chin, Poggio, and Chin}]{alford2022neural}
Simon Alford, Anshula Gandhi, Akshay Rangamani, Andrzej Banburski, Tony Wang, Sylee Dandekar, John Chin, Tomaso Poggio, and Peter Chin. 2022.
\newblock Neural-guided, bidirectional program search for abstraction and reasoning.
\newblock In \emph{Complex Networks \& Their Applications X: Volume 1, Proceedings of the Tenth International Conference on Complex Networks and Their Applications COMPLEX NETWORKS 2021 10}, pages 657--668. Springer.

\bibitem[{Alur et~al.(2013)Alur, Bod{\'{\i}}k, Juniwal, Martin, Raghothaman, Seshia, Singh, Solar{-}Lezama, Torlak, and Udupa}]{AlurBJMRSSSTU13}
Rajeev Alur, Rastislav Bod{\'{\i}}k, Garvit Juniwal, Milo M.~K. Martin, Mukund Raghothaman, Sanjit~A. Seshia, Rishabh Singh, Armando Solar{-}Lezama, Emina Torlak, and Abhishek Udupa. 2013.
\newblock Syntax-guided synthesis.
\newblock In \emph{{Formal Methods in Computer-Aided Design, {FMCAD} 2013}}, pages 1--8.

\bibitem[{Alur et~al.(2017{\natexlab{a}})Alur, Fisman, Singh, and Solar-Lezama}]{alur2017sygus}
Rajeev Alur, Dana Fisman, Rishabh Singh, and Armando Solar-Lezama. 2017{\natexlab{a}}.
\newblock Sygus-comp 2017: Results and analysis.
\newblock \emph{arXiv preprint arXiv:1711.11438}.

\bibitem[{Alur et~al.(2017{\natexlab{b}})Alur, Radhakrishna, and Udupa}]{alur2017scaling}
Rajeev Alur, Arjun Radhakrishna, and Abhishek Udupa. 2017{\natexlab{b}}.
\newblock Scaling enumerative program synthesis via divide and conquer.
\newblock In \emph{{International Conference on Tools and Algorithms for the Construction and Analysis of Systems}}, pages 319--336. Springer.

\bibitem[{Alur et~al.(2018)Alur, Singh, Fisman, and Solar-Lezama}]{alur2018search}
Rajeev Alur, Rishabh Singh, Dana Fisman, and Armando Solar-Lezama. 2018.
\newblock Search-based program synthesis.
\newblock \emph{Communications of the ACM}, 61(12):84--93.

\bibitem[{Bai et~al.(2023)Bai, Wu, Chen, Wang, and Zhang}]{bai2023constituency}
Xuefeng Bai, Jialong Wu, Yulong Chen, Zhongqing Wang, and Yue Zhang. 2023.
\newblock Constituency parsing using llms.
\newblock \emph{arXiv preprint arXiv:2310.19462}.

\bibitem[{Balog et~al.(2016)Balog, Gaunt, Brockschmidt, Nowozin, and Tarlow}]{balog2016deepcoder}
Matej Balog, Alexander~L Gaunt, Marc Brockschmidt, Sebastian Nowozin, and Daniel Tarlow. 2016.
\newblock Deepcoder: Learning to write programs.
\newblock \emph{arXiv preprint arXiv:1611.01989}.

\bibitem[{Banburski et~al.(2020)Banburski, Gandhi, Alford, Dandekar, Chin, and tomaso~a poggio}]{banburski2020dreaming}
Andrzej Banburski, Anshula Gandhi, Simon Alford, Sylee Dandekar, Sang Chin, and tomaso~a poggio. 2020.
\newblock \href {https://openreview.net/forum?id=-gjy2V1ko6t} {Dreaming with {ARC}}.
\newblock In \emph{Learning Meets Combinatorial Algorithms at NeurIPS2020}.

\bibitem[{Barke et~al.(2020)Barke, Peleg, and Polikarpova}]{barke2020just}
Shraddha Barke, Hila Peleg, and Nadia Polikarpova. 2020.
\newblock Just-in-time learning for bottom-up enumerative synthesis.
\newblock \emph{Proceedings of the ACM on Programming Languages}, 4(OOPSLA):1--29.

\bibitem[{Berglund et~al.(2023)Berglund, Tong, Kaufmann, Balesni, Stickland, Korbak, and Evans}]{berglund2023reversal}
Lukas Berglund, Meg Tong, Max Kaufmann, Mikita Balesni, Asa~Cooper Stickland, Tomasz Korbak, and Owain Evans. 2023.
\newblock The reversal curse: Llms trained on" a is b" fail to learn" b is a".
\newblock \emph{arXiv preprint arXiv:2309.12288}.

\bibitem[{Butt et~al.(2023)Butt, Manczak, Wiggers, Rainone, Zhang, Defferrard, and Cohen}]{butt2023codeit}
Natasha Butt, Blazej Manczak, Auke Wiggers, Corrado Rainone, David~W Zhang, Micha{\"e}l Defferrard, and Taco Cohen. 2023.
\newblock Codeit: Abstract reasoning with iterative policy-guided program synthesis.

\bibitem[{Chollet(2019)}]{chollet2019measure}
Fran{\c{c}}ois Chollet. 2019.
\newblock On the measure of intelligence.
\newblock \emph{arXiv preprint arXiv:1911.01547}.

\bibitem[{Devlin et~al.(2017)Devlin, Uesato, Bhupatiraju, Singh, Mohamed, and Kohli}]{devlin2017robustfill}
Jacob Devlin, Jonathan Uesato, Surya Bhupatiraju, Rishabh Singh, Abdel-rahman Mohamed, and Pushmeet Kohli. 2017.
\newblock Robustfill: Neural program learning under noisy i/o.
\newblock In \emph{International conference on machine learning}, pages 990--998. PMLR.

\bibitem[{Ellis et~al.(2020)Ellis, Wong, Nye, Sable-Meyer, Cary, Morales, Hewitt, Solar-Lezama, and Tenenbaum}]{ellis2020dreamcoder}
Kevin Ellis, Catherine Wong, Maxwell Nye, Mathias Sable-Meyer, Luc Cary, Lucas Morales, Luke Hewitt, Armando Solar-Lezama, and Joshua~B Tenenbaum. 2020.
\newblock Dreamcoder: Growing generalizable, interpretable knowledge with wake-sleep bayesian program learning.
\newblock \emph{arXiv preprint arXiv:2006.08381}.

\bibitem[{Feng et~al.(2018)Feng, Martins, Bastani, and Dillig}]{Neo}
Yu~Feng, Ruben Martins, Osbert Bastani, and Isil Dillig. 2018.
\newblock \href {https://doi.org/10.1145/3192366.3192382} {Program synthesis using conflict-driven learning}.
\newblock In \emph{Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design and Implementation}, PLDI 2018, pages 420--435, New York, NY, USA. Association for Computing Machinery.

\bibitem[{Feng et~al.(2017)Feng, Martins, Wang, Dillig, and Reps}]{FengM0DR17}
Yu~Feng, Ruben Martins, Yuepeng Wang, Isil Dillig, and Thomas~W. Reps. 2017.
\newblock Component-based synthesis for complex apis.
\newblock In \emph{POPL}.

\bibitem[{Fischer et~al.(2020)Fischer, Jakobs, M{\"u}cke, and Morik}]{fischer2020solving}
Raphael Fischer, Matthias Jakobs, Sascha M{\"u}cke, and Katharina Morik. 2020.
\newblock Solving abstract reasoning tasks with grammatical evolution.
\newblock In \emph{LWDA}, pages 6--10.

\bibitem[{Gulwani(2011)}]{gulwani2011automating}
Sumit Gulwani. 2011.
\newblock Automating string processing in spreadsheets using input-output examples.
\newblock \emph{ACM Sigplan Notices}, 46(1):317--330.

\bibitem[{Gulwani(2016)}]{gulwani2016pbe}
Sumit Gulwani. 2016.
\newblock Programming by examples (and its applications in data wrangling).
\newblock In Javier Esparza, Orna Grumberg, and Salomon Sickert, editors, \emph{Verification and Synthesis of Correct and Secure Systems}. {IOS} Press.

\bibitem[{Guo et~al.(2024)Guo, Zhu, Yang, Xie, Dong, Zhang, Chen, Bi, Wu, Li et~al.}]{guo2024deepseek}
Daya Guo, Qihao Zhu, Dejian Yang, Zhenda Xie, Kai Dong, Wentao Zhang, Guanting Chen, Xiao Bi, Y~Wu, YK~Li, et~al. 2024.
\newblock Deepseek-coder: When the large language model meets programming--the rise of code intelligence.
\newblock \emph{arXiv preprint arXiv:2401.14196}.

\bibitem[{Josifoski et~al.(2023)Josifoski, Sakota, Peyrard, and West}]{josifoski2023exploiting}
Martin Josifoski, Marija Sakota, Maxime Peyrard, and Robert West. 2023.
\newblock Exploiting asymmetry for synthetic training data generation: Synthie and the case of information extraction.
\newblock \emph{arXiv preprint arXiv:2303.04132}.

\bibitem[{Kalyan et~al.(2018)Kalyan, Mohta, Polozov, Batra, Jain, and Gulwani}]{kalyan2018neural}
Ashwin Kalyan, Abhishek Mohta, Oleksandr Polozov, Dhruv Batra, Prateek Jain, and Sumit Gulwani. 2018.
\newblock Neural-guided deductive search for real-time program synthesis from examples.
\newblock \emph{arXiv preprint arXiv:1804.01186}.

\bibitem[{Lee et~al.(2024)Lee, Sim, Shin, Hwang, Seo, Park, Lee, Kim, and Kim}]{lee2024reasoning}
Seungpil Lee, Woochang Sim, Donghyeon Shin, Sanha Hwang, Wongyu Seo, Jiwon Park, Seokki Lee, Sejin Kim, and Sundong Kim. 2024.
\newblock \href {http://arxiv.org/abs/2403.11793} {Reasoning abilities of large language models: In-depth analysis on the abstraction and reasoning corpus}.

\bibitem[{Lee et~al.(2018)Lee, Heo, Alur, and Naik}]{lee2018accelerating}
Woosuk Lee, Kihong Heo, Rajeev Alur, and Mayur Naik. 2018.
\newblock Accelerating search-based program synthesis using learned probabilistic models.
\newblock \emph{ACM SIGPLAN Notices}, 53(4):436--449.

\bibitem[{Lei et~al.(2024)Lei, Lipovetzky, and Ehinger}]{lei2024generalized}
Chao Lei, Nir Lipovetzky, and Krista~A. Ehinger. 2024.
\newblock \href {http://arxiv.org/abs/2401.07426} {Generalized planning for the abstraction and reasoning corpus}.

\bibitem[{Li et~al.(2024{\natexlab{a}})Li, Zhou, Dong, Zhang, and Wang}]{arborist}
Xiang Li, Xiangyu Zhou, Rui Dong, Yihong Zhang, and Xinyu Wang. 2024{\natexlab{a}}.
\newblock \href {https://doi.org/10.1145/3632894} {Efficient bottom-up synthesis for programs with local variables}.
\newblock \emph{Proc. ACM Program. Lang.}, 8(POPL).

\bibitem[{Li et~al.(2024{\natexlab{b}})Li, Parsert, and Polgreen}]{li2024guiding}
Yixuan Li, Julian Parsert, and Elizabeth Polgreen. 2024{\natexlab{b}}.
\newblock \href {http://arxiv.org/abs/2403.03997} {Guiding enumerative program synthesis with large language models}.

\bibitem[{McCarthy(1960)}]{sexp}
John McCarthy. 1960.
\newblock \href {https://doi.org/10.1145/367177.367199} {Recursive functions of symbolic expressions and their computation by machine, part i}.
\newblock \emph{Commun. ACM}, 3(4):184â€“195.

\bibitem[{McCoy et~al.(2023)McCoy, Yao, Friedman, Hardy, and Griffiths}]{mccoy2023embers}
R~Thomas McCoy, Shunyu Yao, Dan Friedman, Matthew Hardy, and Thomas~L Griffiths. 2023.
\newblock Embers of autoregression: Understanding large language models through the problem they are trained to solve.
\newblock \emph{arXiv preprint arXiv:2309.13638}.

\bibitem[{Odena et~al.(2020)Odena, Shi, Bieber, Singh, Sutton, and Dai}]{odena2020bustle}
Augustus Odena, Kensen Shi, David Bieber, Rishabh Singh, Charles Sutton, and Hanjun Dai. 2020.
\newblock Bustle: bottom-up program synthesis through learning-guided exploration.
\newblock \emph{arXiv preprint arXiv:2007.14381}.

\bibitem[{OpenAI(2024)}]{openai_gpt4_2024}
OpenAI. 2024.
\newblock \href {https://openai.com/index/hello-gpt-4o/} {Hello gpt-4.0}.
\newblock Accessed: 2024-05-19.

\bibitem[{Osera and Zdancewic(2015)}]{osera2015type}
Peter-Michael Osera and Steve Zdancewic. 2015.
\newblock Type-and-example-directed program synthesis.
\newblock \emph{ACM SIGPLAN Notices}, 50(6):619--630.

\bibitem[{Reynolds et~al.(2019)Reynolds, Barbosa, N{\"o}tzli, Barrett, and Tinelli}]{reynolds2019cvc}
Andrew Reynolds, Haniel Barbosa, Andres N{\"o}tzli, Clark Barrett, and Cesare Tinelli. 2019.
\newblock cvc 4 sy: smart and fast term enumeration for syntax-guided synthesis.
\newblock In \emph{International Conference on Computer Aided Verification}, pages 74--83. Springer.

\bibitem[{Shi et~al.(2022{\natexlab{a}})Shi, Bieber, and Singh}]{tfcoder}
Kensen Shi, David Bieber, and Rishabh Singh. 2022{\natexlab{a}}.
\newblock \href {https://doi.org/10.1145/3517034} {Tf-coder: Program synthesis for tensor manipulations}.
\newblock \emph{ACM Trans. Program. Lang. Syst.}, 44(2).

\bibitem[{Shi et~al.(2022{\natexlab{b}})Shi, Dai, Ellis, and Sutton}]{shi2022crossbeam}
Kensen Shi, Hanjun Dai, Kevin Ellis, and Charles Sutton. 2022{\natexlab{b}}.
\newblock Crossbeam: Learning to search in bottom-up program synthesis.
\newblock \emph{arXiv preprint arXiv:2203.10452}.

\bibitem[{Tan and Motani(2023)}]{tan2023large}
John Chong~Min Tan and Mehul Motani. 2023.
\newblock Large language model (llm) as a system of multiple expert agents: An approach to solve the abstraction and reasoning corpus (arc) challenge.
\newblock \emph{arXiv preprint arXiv:2310.05146}.

\bibitem[{Udupa et~al.(2013)Udupa, Raghavan, Deshmukh, Mador-Haim, Martin, and Alur}]{udupa2013transit}
Abhishek Udupa, Arun Raghavan, Jyotirmoy~V Deshmukh, Sela Mador-Haim, Milo~MK Martin, and Rajeev Alur. 2013.
\newblock Transit: specifying protocols with concolic snippets.
\newblock \emph{ACM SIGPLAN Notices}, 48(6):287--296.

\bibitem[{Ugare et~al.(2024)Ugare, Suresh, Kang, Misailovic, and Singh}]{ugare2024improving}
Shubham Ugare, Tarun Suresh, Hangoo Kang, Sasa Misailovic, and Gagandeep Singh. 2024.
\newblock Improving llm code generation with grammar augmentation.
\newblock \emph{arXiv preprint arXiv:2403.01632}.

\bibitem[{Wang et~al.(2023)Wang, Zelikman, Poesia, Pu, Haber, and Goodman}]{wang2023hypothesis}
Ruocheng Wang, Eric Zelikman, Gabriel Poesia, Yewen Pu, Nick Haber, and Noah~D Goodman. 2023.
\newblock Hypothesis search: Inductive reasoning with language models.
\newblock \emph{arXiv preprint arXiv:2309.05660}.

\bibitem[{Wen et~al.(2024)Wen, Yin, Shi, Michalewski, Chaudhuri, and Polozov}]{wen2024grounding}
Yeming Wen, Pengcheng Yin, Kensen Shi, Henryk Michalewski, Swarat Chaudhuri, and Alex Polozov. 2024.
\newblock \href {http://arxiv.org/abs/2402.08073} {Grounding data science code generation with input-output specifications}.

\bibitem[{Wind(2020)}]{arc_kaggle_first}
Johan~Sokrates Wind. 2020.
\newblock \href {https://github.com/top-quarks/ARC-solution} {Arc kaggle competition, 1st place}.
\newblock Accessed: 2024-05-19.

\bibitem[{Xu et~al.(2023{\natexlab{a}})Xu, Khalil, and Sanner}]{xu2023graphs}
Yudong Xu, Elias~B Khalil, and Scott Sanner. 2023{\natexlab{a}}.
\newblock Graphs, constraints, and search for the abstraction and reasoning corpus.
\newblock In \emph{Proceedings of the AAAI Conference on Artificial Intelligence}, volume~37, pages 4115--4122.

\bibitem[{Xu et~al.(2023{\natexlab{b}})Xu, Li, Vaezipoor, Sanner, and Khalil}]{xu2023llms}
Yudong Xu, Wenhao Li, Pashootan Vaezipoor, Scott Sanner, and Elias~B Khalil. 2023{\natexlab{b}}.
\newblock Llms and the abstraction and reasoning corpus: Successes, failures, and the importance of object-based representations.
\newblock \emph{arXiv preprint arXiv:2305.18354}.

\bibitem[{Zhang et~al.(2023)Zhang, Dang, Peng, and Van~den Broeck}]{zhang2023tractable}
Honghua Zhang, Meihua Dang, Nanyun Peng, and Guy Van~den Broeck. 2023.
\newblock Tractable control for autoregressive language generation.
\newblock In \emph{International Conference on Machine Learning}, pages 40932--40945. PMLR.

\end{thebibliography}
